name: Deploy EB Env to Dev on Merge to Develop

on:
  push:
    branches:
      - develop   # Trigger only on merge/push to develop

permissions:
  id-token: write
  contents: read

jobs:
  create-dev-env:
    name: Create EB Environment in Dev Account
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS Prod Account
      - name: Configure AWS Prod Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::986906625933:role/OPS_TEST_ROLE
          aws-region: us-east-1

      # 3️⃣ Export Prod EB configuration as JSON
      - name: Export EB Prod Config
        run: |
          aws elasticbeanstalk describe-configuration-settings \
            --application-name PLT \
            --environment-name PLT-env \
            > prod-config.json

      # 4️⃣ Configure AWS Dev Account
      - name: Configure AWS Dev Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::045615335706:role/PLT_Test_Role
          aws-region: us-east-1

      # 5️⃣ Create EB Application if it does not exist
      - name: Ensure EB Application Exists
        run: |
          if ! aws elasticbeanstalk describe-applications --application-names PLT; then
            aws elasticbeanstalk create-application --application-name PLT
          fi

      # 6️⃣ Create a new application version
      - name: Create EB Application Version
        run: |
          VERSION_LABEL="build-${{ github.run_number }}"
          echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV

          # Zip the application source
          zip -r app.zip .

          # Create a new EB application version (quotes fix applied)
          aws elasticbeanstalk create-application-version \
            --application-name PLT \
            --version-label "$VERSION_LABEL" \
            --source-bundle fileb://app.zip

      # 7️⃣ Create new Dev EB Environment
      - name: Create EB Environment in Dev
        run: |
          EB_ENV_NAME="dev-env-${{ github.run_number }}"
          echo "EB_ENV_NAME=$EB_ENV_NAME" >> $GITHUB_ENV

          aws elasticbeanstalk create-environment \
            --application-name PLT \
            --environment-name "$EB_ENV_NAME" \
            --version-label "$VERSION_LABEL" \
            --option-settings file://<(jq -c '.ConfigurationSettings[0].OptionSettings' prod-config.json)

      # 8️⃣ Wait for environment and run smoke test
      - name: Smoke Test Application
        run: |
          echo "Waiting for environment $EB_ENV_NAME to be ready..."
          aws elasticbeanstalk wait environment-exists --environment-names "$EB_ENV_NAME"
          aws elasticbeanstalk wait environment-ready --environment-names "$EB_ENV_NAME"

          APP_URL=$(aws elasticbeanstalk describe-environments \
            --application-name PLT \
            --environment-names "$EB_ENV_NAME" \
            --query 'Environments[0].CNAME' --output text)

          echo "Testing endpoint: http://$APP_URL"
          curl -f http://$APP_URL || exit 1

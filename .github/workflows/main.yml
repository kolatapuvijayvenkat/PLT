name: Deploy Node.js App to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Copy Build to Backend
        run: |
          rm -rf backend/build
          cp -r frontend/build backend/build
          rm -rf frontend/build

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install --production

      - name: Zip Backend
        run: |
          cd backend
          zip -r ../app.zip ./*

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::986906625933:role/OPS_TEST_ROLE
          role-session-name: github-actions
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Debug AWS Identity
        run: aws sts get-caller-identity

      - name: Deploy to Elastic Beanstalk
        run: |
          aws s3 cp app.zip s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-$(aws sts get-caller-identity --query Account --output text)/app-${GITHUB_SHA}.zip

          aws elasticbeanstalk create-application-version \
            --application-name "${{ secrets.EB_APP_NAME }}" \
            --version-label "build-${GITHUB_SHA}" \
            --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-$(aws sts get-caller-identity --query Account --output text)",S3Key="app-${GITHUB_SHA}.zip"

          aws elasticbeanstalk update-environment \
            --environment-name "${{ secrets.EB_ENV_NAME }}" \
            --version-label "build-${GITHUB_SHA}"
